#include <stdio.h>
            int next_block_id = allocated_blocks[i + 1];
            next_block[current_block] = next_block_id;
            printf(" %d ->", current_block);
        } else {
            // Last block in the file
            next_block[current_block] = -1; // -1 represents NULL/End
            printf(" %d -> NULL\n", current_block);
        }
    }
}

// ---------------------------------------------
// Main Function
// ---------------------------------------------
int main() {
    int choice;
    int file_size;
    
    // Initial Disk Setup: All blocks are FREE (0)
    for (int i = 0; i < DISK_SIZE; i++) {
        disk[i] = FREE;
        next_block[i] = -1; // Initialize linked list pointers to -1
    }

    while (1) {
        display_menu();
        
        printf("Enter your choice: ");
        if (scanf("%d", &choice) != 1) {
            printf("Invalid input\n");
            // Clear input buffer
            while (getchar() != '\n'); 
            continue;
        }

        if (choice == 4) {
            // printf("Exit");
            break;
        }

        // Handle allocation strategies (1, 2, or 3)
        if (choice >= 1 && choice <= 3) {
            file_size = get_file_size();
            if (file_size == -1) {
                continue; // Invalid file size, return to menu
            }

            switch (choice) {
                case 1:
                    sequential_allocation(file_size);
                    break;
                case 2:
                    indexed_allocation(file_size);
                    break;
                case 3:
                    linked_allocation(file_size);
                    break;
            }
        } else {
            printf("Invalid choice\n");
        }
    }

    return 0;
}

